{
  "contractName": "LegalFramework",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "asset",
          "type": "uint256"
        }
      ],
      "name": "stipulation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"asset\",\"type\":\"uint256\"}],\"name\":\"stipulation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/heyyehudes/Documents/Farmbit_Demo/Project-Demo/contracts/LegalFramework.sol\":\"LegalFramework\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/heyyehudes/Documents/Farmbit_Demo/Project-Demo/contracts/LegalFramework.sol\":{\"keccak256\":\"0x88b44cb93eb07fb55713dcd6dd92b4f6734557b7ff57f532e4bd4225e09776cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0272125a6b23951a8c5755d496441c2695739a70e744e5611296c46e2c3f6f68\",\"dweb:/ipfs/Qmbj4kGcKHVW8zFGB2Q5LVyHRYxpHMqkzokd4FUZaYLnx5\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610124806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063c2ec774e14602d575b600080fd5b60436004803603810190603f91906071565b6057565b604051604e919060a6565b60405180910390f35b6000919050565b600081359050606b8160da565b92915050565b600060208284031215608457608360d5565b5b6000609084828501605e565b91505092915050565b60a08160bf565b82525050565b600060208201905060b960008301846099565b92915050565b60008115159050919050565b6000819050919050565b600080fd5b60e18160cb565b811460eb57600080fd5b5056fea2646970667358221220d59eff0bc7fd0fee50db26b5539e936359ce7bd059965919bb6e8673efd43a2e64736f6c63430008060033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063c2ec774e14602d575b600080fd5b60436004803603810190603f91906071565b6057565b604051604e919060a6565b60405180910390f35b6000919050565b600081359050606b8160da565b92915050565b600060208284031215608457608360d5565b5b6000609084828501605e565b91505092915050565b60a08160bf565b82525050565b600060208201905060b960008301846099565b92915050565b60008115159050919050565b6000819050919050565b600080fd5b60e18160cb565b811460eb57600080fd5b5056fea2646970667358221220d59eff0bc7fd0fee50db26b5539e936359ce7bd059965919bb6e8673efd43a2e64736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1449:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:8",
                "type": ""
              }
            ],
            "src": "7:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:263:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "266:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "357:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "372:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "386:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "376:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "401:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "436:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "447:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "432:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "432:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "456:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "411:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "401:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:8",
                "type": ""
              }
            ],
            "src": "152:329:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "546:50:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "563:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "583:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "568:14:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "568:21:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "556:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "556:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "556:34:8"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "534:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "541:3:8",
                "type": ""
              }
            ],
            "src": "487:109:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "694:118:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "704:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "716:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "727:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "712:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "712:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "704:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "778:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "791:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "802:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "787:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "787:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "740:37:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "740:65:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "740:65:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "666:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "678:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "689:4:8",
                "type": ""
              }
            ],
            "src": "602:210:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "858:35:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "868:19:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "884:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "878:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "878:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "868:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "851:6:8",
                "type": ""
              }
            ],
            "src": "818:75:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "941:48:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "951:32:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "976:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "969:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "969:13:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "962:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:21:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "951:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "923:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "933:7:8",
                "type": ""
              }
            ],
            "src": "899:90:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1040:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1050:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1061:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1050:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1022:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1032:7:8",
                "type": ""
              }
            ],
            "src": "995:77:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1167:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1184:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1187:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1177:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1177:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1177:12:8"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1078:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1290:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1307:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1310:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1300:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1300:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1300:12:8"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1201:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1367:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1424:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1433:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1436:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1426:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1426:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1426:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1390:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1415:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1397:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1397:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1387:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1387:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1380:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1380:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1377:2:8"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1360:5:8",
                "type": ""
              }
            ],
            "src": "1324:122:8"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "56:1147:2:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "56:1147:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;672:529;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;729:4;672:529;;;:::o;7:139:8:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:2;;;266:79;;:::i;:::-;228:2;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;218:263;;;;:::o;487:109::-;568:21;583:5;568:21;:::i;:::-;563:3;556:34;546:50;;:::o;602:210::-;689:4;727:2;716:9;712:18;704:26;;740:65;802:1;791:9;787:17;778:6;740:65;:::i;:::-;694:118;;;;:::o;899:90::-;933:7;976:5;969:13;962:21;951:32;;941:48;;;:::o;995:77::-;1032:7;1061:5;1050:16;;1040:32;;;:::o;1201:117::-;1310:1;1307;1300:12;1324:122;1397:24;1415:5;1397:24;:::i;:::-;1390:5;1387:35;1377:2;;1436:1;1433;1426:12;1377:2;1367:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\ncontract LegalFramework {\n    /*\n    Outlines:\n    1. If borrower defaults on loan then NFT is sold back at market price by collateral manager\n    2. If borrower wants to get back NFT they can\n    Re-Payments options:\n    How do we deal with the connundrum of choosing to pay back loan?\n    Install payments: NFT will know, as soon payment is done\n    Take timestamp and have Oracle that will determine loan has been paid\n    Process:\n    Step1. Loan Registration\n    Step2. Loan Repayment\n    Step3. Pool via Chainlink/Oracle that will keep track of timestamp/repayment\n    Step4. Pool confirmation\n    */\n    \n    function stipulation(uint256 asset) pure public returns (bool) {\n       /*\n        1. If borrower defaults on loan then NFT is sold back at market price by collateral manager\n        2. If borrower wants to get back NFT they can buy back NFT\n        3. NFT has been sold, other funds put back into the pool\n        1% to collateral manager once sale is final and the rest to goes back to the pool\n        Any funds left post-sale (of loan) goes to asset owner and 1% goes to the collateral manager\n\n    \n\n       */\n        \n    }\n}",
  "sourcePath": "/Users/heyyehudes/Documents/Farmbit_Demo/Project-Demo/contracts/LegalFramework.sol",
  "ast": {
    "absolutePath": "/Users/heyyehudes/Documents/Farmbit_Demo/Project-Demo/contracts/LegalFramework.sol",
    "exportedSymbols": {
      "LegalFramework": [
        152
      ]
    },
    "id": 153,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 143,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 152,
        "linearizedBaseContracts": [
          152
        ],
        "name": "LegalFramework",
        "nameLocation": "65:14:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "735:466:2",
              "statements": []
            },
            "functionSelector": "c2ec774e",
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stipulation",
            "nameLocation": "681:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "701:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "693:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "693:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "692:15:2"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "729:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "728:6:2"
            },
            "scope": 152,
            "src": "672:529:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 153,
        "src": "56:1147:2",
        "usedErrors": []
      }
    ],
    "src": "32:1171:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/heyyehudes/Documents/Farmbit_Demo/Project-Demo/contracts/LegalFramework.sol",
    "exportedSymbols": {
      "LegalFramework": [
        152
      ]
    },
    "id": 153,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 143,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 152,
        "linearizedBaseContracts": [
          152
        ],
        "name": "LegalFramework",
        "nameLocation": "65:14:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "735:466:2",
              "statements": []
            },
            "functionSelector": "c2ec774e",
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stipulation",
            "nameLocation": "681:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "701:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "693:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "693:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "692:15:2"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "729:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "728:6:2"
            },
            "scope": 152,
            "src": "672:529:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 153,
        "src": "56:1147:2",
        "usedErrors": []
      }
    ],
    "src": "32:1171:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.1",
  "updatedAt": "2021-08-05T02:02:11.333Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}